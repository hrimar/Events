@model Events.Web.Models.HomePageViewModel

@{
    ViewData["Title"] = "Home Page";
}

<section class="bg-primary text-white py-5">
    <div class="container">
        <h1 class="display-5 fw-bold mb-3">Discover the best events</h1>
        <p class="lead">Concerts, theatre, sports in Sofia</p>
        
        <div class="row mt-4">
            <div class="col-6 col-md-3 mb-2">
                <a href="?category=Music" class="btn btn-outline-light w-100 @(ViewBag.CurrentCategory == "Music" ? "active" : "")">
                    <i class="fas fa-music"></i> Music
                </a>
            </div>
            <div class="col-6 col-md-3 mb-2">
                <a href="?category=Sports" class="btn btn-outline-light w-100 @(ViewBag.CurrentCategory == "Sports" ? "active" : "")">
                    <i class="fas fa-running"></i> Sports
                </a>
            </div>
            <div class="col-6 col-md-3 mb-2">
                <a href="?category=Theatre" class="btn btn-outline-light w-100 @(ViewBag.CurrentCategory == "Theatre" ? "active" : "")">
                    <i class="fas fa-theater-masks"></i> Theatre
                </a>
            </div>
            <div class="col-6 col-md-3 mb-2">
                <a href="?free=true" class="btn btn-success w-100 @(ViewBag.CurrentFree == true ? "active" : "")">
                    <i class="fas fa-gift"></i> Free
                </a>
            </div>
        </div>
        
        @if (ViewBag.CurrentCategory != null || ViewBag.CurrentFree != null)
        {
            <div class="mt-3">
                <a href="/" class="btn btn-outline-light">
                    <i class="fas fa-times"></i> Clear filters
                </a>
            </div>
        }
    </div>
</section>

<section class="py-5">
    <div class="container">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2>Upcoming events</h2>
            <small class="text-muted">
                Showing @((Model.PaginatedEvents.CurrentPage - 1) * Model.PaginatedEvents.PageSize + 1) - 
                @Math.Min(Model.PaginatedEvents.CurrentPage * Model.PaginatedEvents.PageSize, Model.PaginatedEvents.TotalCount) 
                of @Model.PaginatedEvents.TotalCount events
            </small>
        </div>
        
        <div class="row">
            @foreach(var eventItem in Model.PaginatedEvents.Items)
            {
                <div class="col-lg-4 col-md-6 mb-4">
                    <div class="card event-card h-100">
                        <!-- SOLUTION 1: Aspect ratio container for images -->
                        <div class="event-image-container">
                            <img src="@eventItem.DefaultImage" 
                                 alt="@eventItem.Name" 
                                 class="event-image-full"
                                 onerror="this.src='/images/default-event.jpg'">
                            <div class="event-price @(eventItem.IsFree ? "event-free" : "")">
                                @eventItem.PriceDisplay
                            </div>
                        </div>
                        
                        <div class="card-body d-flex flex-column">
                            <h5 class="event-title">@eventItem.Name</h5>
                            <div class="event-date mb-2">
                                <i class="fas fa-calendar me-1"></i>
                                @eventItem.FormattedDate @eventItem.FormattedTime
                            </div>
                            <div class="event-venue mb-2">
                                <i class="fas fa-map-marker-alt me-1"></i>
                                @eventItem.Location
                            </div>
                            
                            @if (!string.IsNullOrEmpty(eventItem.CategoryName))
                            {
                                <div class="mb-2">
                                    <span class="badge bg-secondary">@eventItem.CategoryName</span>
                                    @if (!string.IsNullOrEmpty(eventItem.SubCategoryName))
                                    {
                                        <span class="badge bg-light text-dark ms-1">@eventItem.SubCategoryName</span>
                                    }
                                </div>
                            }
                            
                            @if (eventItem.Tags.Any())
                            {
                                <div class="event-tags mb-2">
                                    @foreach(var tag in eventItem.Tags.Take(3))
                                    {
                                        <span class="badge bg-info text-dark me-1">@tag</span>
                                    }
                                </div>
                            }
                            
                            @if (!string.IsNullOrEmpty(eventItem.ShortDescription))
                            {
                                <p class="text-muted small flex-grow-1">@eventItem.ShortDescription</p>
                            }
                        </div>
                        
                        <div class="card-footer bg-transparent">
                            @if (eventItem.HasTicketUrl)
                            {
                                <a href="@eventItem.TicketUrl" target="_blank" class="btn btn-primary btn-sm">
                                    <i class="fas fa-ticket-alt me-1"></i>Buy tickets
                                </a>
                            }
                            <button class="btn btn-outline-secondary btn-sm float-end" onclick="toggleFavorite(@eventItem.Id)">
                                <i class="fas fa-heart"></i>
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
        
        @if (Model.PaginatedEvents.TotalPages > 1)
        {
            <nav aria-label="Events pagination" class="mt-4">
                <ul class="pagination justify-content-center">
                    @if (Model.PaginatedEvents.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="?page=@(Model.PaginatedEvents.CurrentPage - 1)&category=@ViewBag.CurrentCategory&free=@ViewBag.CurrentFree">
                                <i class="fas fa-chevron-left"></i> Previous
                            </a>
                        </li>
                    }
                    
                    @for (var i = Math.Max(1, Model.PaginatedEvents.CurrentPage - 2); i <= Math.Min(Model.PaginatedEvents.TotalPages, Model.PaginatedEvents.CurrentPage + 2); i++)
                    {
                        <li class="page-item @(i == Model.PaginatedEvents.CurrentPage ? "active" : "")">
                            <a class="page-link" href="?page=@i&category=@ViewBag.CurrentCategory&free=@ViewBag.CurrentFree">@i</a>
                        </li>
                    }
                    
                    @if (Model.PaginatedEvents.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="?page=@(Model.PaginatedEvents.CurrentPage + 1)&category=@ViewBag.CurrentCategory&free=@ViewBag.CurrentFree">
                                Next <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        }
    </div>
</section>

@section Scripts {
    <script>
        function toggleFavorite(eventId) {
            $.post('/api/favorites/toggle', { eventId: eventId })
                .done(function(data) {
                    console.log('Favorite toggled for event:', eventId);
                })
                .fail(function() {
                    console.log('Error toggling favorite');
                });
        }
    </script>
}