name: Build and deploy to Azure Function App - Linux

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './Events.Crawler'
  DOTNET_VERSION: '8.0.x'
  AZURE_FUNCTIONAPP_NAME: 'events-prod-ne-func'  # Update with your Linux function name

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Setup Node.js (for Playwright)
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Playwright Dependencies
        run: |
          # Install system dependencies for Playwright on Linux
          sudo apt-get update
          sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libdrm2 libxkbcommon0 libgtk-3-0

      - name: 'Restore and Build Project'
        shell: bash
        run: |
          cd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          dotnet restore
          dotnet build --configuration Release --no-restore
          dotnet publish --configuration Release --output ../output --no-build

      - name: Install Playwright Browsers in Output
        run: |
          cd ./output
          # Install only chromium to reduce package size
          npx playwright install chromium --with-deps

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_D149CD43094347E294E9C71E8D945430 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_FEBB774751BD404CBEB6446EB656CB5B }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_99F71B0EA7524611B2C2E462A446E8AC }}

      - name: 'Deploy to Azure Functions'
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          slot-name: 'Production'
          package: './output'